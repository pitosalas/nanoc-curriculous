require 'pry'
require_relative "rake/rake_helper"

include RakeHelpers
verify_environment unless Rake.application.top_level_tasks[0] == "conf:declare"
prepare_cleanlist

#  RAKE TASKS BEGIN HERE

desc "Print out help for this rakefile"
task :default => [:help]

desc "Print out help text to use this rakefile"
task :help do
	show_help
end

namespace 'conf' do

	desc "Declare associated content directory"
	task :declare do |t, args|
		content_dir = ENV['dir']
		fail "Error: Specify content directory with dir='/my/dir'" if content_dir.nil?
		if File.exist?(CONF_FILE_PATH)
			puts "[Overwriting previous local config file at '#{CONF_FILE_PATH}']"
		end
		require "#{content_dir}/configure.rb"
		write_config_file(content_dir)
		write_runtime_config
	end

	desc "Check Configuration settings"
	task :check do
		puts (config_ok? ? "[Config Ok.]" : "[Config invalid.]")
	end

	desc "Display Configuration settings"
	task :show do
		puts "Curriculous Configuration:\n"
		puts "  Course Name:               #{COURSE_NAME}"
		puts "  Content path:              #{CONTENT_PATH}"
		puts "  Target AWS Bucket:         #{AWS_BUCKET}"
		puts "  Related Topics directory:  #{TOPICS_PATH}"
		puts "  Copyright string:          \"#{COPYRIGHT_STRING}\""
	end
end

namespace 'content' do

	desc "grab files from authoring directories into staging area"
	task :grab => [:grab_content, :grab_topics]

	task :grab_content do
		content_files = Rake::FileList.new(content_master+"*.erb", content_master+"**/*.erb")
		smart_copy_files(content_files, content_master, content_working)
	end

	task :grab_topics do
		topic_files = Rake::FileList.new(topics_master+"*.erb", topics_master+"**/*.erb")
		smart_copy_files(topic_files, topics_master, topics_working)
	end

	desc "ungrab (return) files back to authoring directories"
	task :ungrab do
	end
end

namespace 'nanoc' do
	desc "compile course locally"
	task :compile do
		sh "nanoc compile"
	end

	desc "run local server"
	task :serve do
		sh "nanoc view"
	end

	desc "recompile automatically"
	task :guard do
		sh "guard -i"
	end

	desc "view in browser"
	task :view do
		sh "open http://0.0.0.0:3000"
	end
end

